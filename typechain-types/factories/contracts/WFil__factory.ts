/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { WFil, WFilInterface } from "../../contracts/WFil";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "guy",
        type: "address",
      },
      {
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "src",
        type: "address",
      },
      {
        name: "dst",
        type: "address",
      },
      {
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "dst",
        type: "address",
      },
      {
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "deposit",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
      {
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
] as const;

const _bytecode =
  "0x6060604052341561000f57600080fd5b61072b8061001e6000396000f3006060604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b8578063095ea7b31461014257806318160ddd1461018557806323b872dd146101aa5780632e1a7d4d146101df578063313ce567146101f557806370a082311461021e57806395d89b411461024a578063a9059cbb1461025d578063d0e30db0146100ae578063dd62ed3e1461028c575b6100b66102be565b005b34156100c357600080fd5b6100cb610321565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101075780820151838201526020016100ef565b50505050905090810190601f1680156101345780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014d57600080fd5b61017173ffffffffffffffffffffffffffffffffffffffff60043516602435610358565b604051901515815260200160405180910390f35b341561019057600080fd5b6101986103d1565b60405190815260200160405180910390f35b34156101b557600080fd5b61017173ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356103ec565b34156101ea57600080fd5b6100b66004356105ab565b341561020057600080fd5b610208610680565b60405160ff909116815260200160405180910390f35b341561022957600080fd5b61019873ffffffffffffffffffffffffffffffffffffffff60043516610685565b341561025557600080fd5b6100cb610697565b341561026857600080fd5b61017173ffffffffffffffffffffffffffffffffffffffff600435166024356106ce565b341561029757600080fd5b61019873ffffffffffffffffffffffffffffffffffffffff600435811690602435166106e2565b73ffffffffffffffffffffffffffffffffffffffff3316600081815260208190526040908190208054349081019091557fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c915190815260200160405180910390a2565b60408051908101604052600b81527f577261707065642046696c000000000000000000000000000000000000000000602082015281565b73ffffffffffffffffffffffffffffffffffffffff338116600081815260016020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff30163190565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120548290101561041f57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156104ae575073ffffffffffffffffffffffffffffffffffffffff808516600090815260016020908152604080832033909416835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14155b1561052f5773ffffffffffffffffffffffffffffffffffffffff80851660009081526001602090815260408083203390941683529290522054829010156104f457600080fd5b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020908152604080832033909416835292905220805483900390555b73ffffffffffffffffffffffffffffffffffffffff8085166000818152602081905260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b73ffffffffffffffffffffffffffffffffffffffff3316600090815260208190526040902054819010156105de57600080fd5b73ffffffffffffffffffffffffffffffffffffffff3316600081815260208190526040908190208054849003905582156108fc0290839051600060405180830381858888f19350505050151561063357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658260405190815260200160405180910390a250565b601281565b60006020819052908152604090205481565b60408051908101604052600481527f5746494c00000000000000000000000000000000000000000000000000000000602082015281565b60006106db3384846103ec565b9392505050565b6001602090815260009283526040808420909152908252902054815600a165627a7a7230582007fd7fcc023bc1eb850c5364848afb26cc541d4b73c63e8b576fe2f72b8926300029";

type WFilConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WFilConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WFil__factory extends ContractFactory {
  constructor(...args: WFilConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WFil> {
    return super.deploy(overrides || {}) as Promise<WFil>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WFil {
    return super.attach(address) as WFil;
  }
  override connect(signer: Signer): WFil__factory {
    return super.connect(signer) as WFil__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WFilInterface {
    return new utils.Interface(_abi) as WFilInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WFil {
    return new Contract(address, _abi, signerOrProvider) as WFil;
  }
}
